version: "3"

services:

  gateway-service:
    command: python3 app/__main__.py
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - ./gateway:/app
    env_file:
      - .env
    environment:
      PYTHONPATH: ${PYTHONPATH}:/code/app
    depends_on:
      - auth-service
      - c3-research-service
      - c3-exposure-service
      - d3-research-service
      - d3-exposure-service
      - warehouse-service
    networks:
      - c3d3_network

  auth-service:
    command: python3 app/views/view.py
    build:
      context: ./auth
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: auth-postgres
      POSTGRES_USER: auth_db
      POSTGRES_PASSWORD: auth_db
      POSTGRES_DB: auth_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network
    depends_on:
      - auth-postgres

  c3-research-service:
    command: python3 app/__main__.py
    build:
      context: ./c3research
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: c3-research-postgres
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network
    depends_on:
      - c3-research-postgres

  c3-exposure-service:
    command: python3 app/__main__.py
    build:
      context: ./c3exposure
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: c3-exposure-postgres
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network
    depends_on:
      - c3-exposure-postgres

  d3-research-service:
    command: python3 app/__main__.py
    build:
      context: ./d3research
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: d3-research-postgres
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network
    depends_on:
      - d3-research-postgres

  d3-exposure-service:
    command: python3 app/__main__.py
    build:
      context: ./d3exposure
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: d3-exposure-postgres
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network
    depends_on:
      - d3-exposure-postgres

  warehouse-service:
    command: python3 app/views/view.py
    build:
      context: ./warehouse
      dockerfile: Dockerfile
    environment:
      CLICKHOUSE_HOST: warehouse-clickhouse
      CLICKHOUSE_USER: dwh_db
      CLICKHOUSE_PASSWORD: dwh_db
      CLICKHOUSE_DB: dwh_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    depends_on:
      - warehouse-clickhouse
    networks:
      - c3d3_network

  auth-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: auth_db
      POSTGRES_PASSWORD: auth_db
      POSTGRES_DB: auth_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "auth_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network
    volumes:
      - ./auth-postgres:/var/lib/postgresql/data

  c3-research-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "c3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network
    ports:
      - '5433:5432'
    volumes:
      - ./c3-research-postgres:/var/lib/postgresql/data

  c3-exposure-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "c3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network
    ports:
      - '5434:5432'
    volumes:
      - ./c3-exposure-postgres:/var/lib/postgresql/data

  d3-research-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "d3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network
    ports:
      - '5435:5432'
    volumes:
      - ./d3-research-postgres:/var/lib/postgresql/data

  d3-exposure-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "d3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network
    ports:
      - '5436:5432'
    volumes:
      - ./d3-exposure-postgres:/var/lib/postgresql/data

  warehouse-clickhouse:
    image: clickhouse/clickhouse-server
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: 0.0.0.0
      CLICKHOUSE_DB: dwh_db
      CLICKHOUSE_USER: dwh_db
      CLICKHOUSE_PASSWORD: dwh_db
    volumes:
      - ./clickhouse-data:/var/lib/clickhouse/
    ports:
      - '8123:8123'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:8123/ping || exit 1
    restart: always
    networks:
      - c3d3_network

networks:
  c3d3_network:
